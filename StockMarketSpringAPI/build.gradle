plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.5'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'org.sonarqube' version '4.0.0.2929'
    id 'jacoco'
    id 'org.liquibase.gradle' version '2.2.1'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
description = 'StockMarketSpringAPI'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

repositories {
    mavenCentral()
    mavenLocal()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.3'
    implementation 'io.swagger.core.v3:swagger-models:2.2.21'
    implementation 'io.github.cdimascio:java-dotenv:5.2.2'
    implementation 'org.modelmapper:modelmapper:2.3.8'
    implementation 'org.liquibase:liquibase-core:4.27.0'
    implementation 'org.liquibase.ext:liquibase-hibernate6:4.27.0'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
    implementation 'org.projectlombok:lombok'

    testImplementation 'org.springframework.boot:spring-boot-testcontainers'
    testImplementation 'org.testcontainers:postgresql'
    testImplementation 'org.springframework.security:spring-security-test'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'org.postgresql:postgresql'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    testImplementation 'org.mockito:mockito-core'
    testImplementation 'org.mockito:mockito-inline:5.2.0'
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'
    liquibaseRuntime 'org.liquibase:liquibase-core:4.27.0'
    liquibaseRuntime 'info.picocli:picocli:4.7.5'
    liquibaseRuntime 'org.postgresql:postgresql:42.7.7'
    liquibaseRuntime 'org.hibernate:hibernate-core:6.4.4.Final'
    liquibaseRuntime 'org.liquibase.ext:liquibase-hibernate6:4.27.0'
    liquibaseRuntime 'org.springframework:spring-core:6.1.6'
    liquibaseRuntime 'org.springframework:spring-context:6.1.6'
    liquibaseRuntime 'org.springframework:spring-beans:6.1.6'
    liquibaseRuntime 'org.springframework:spring-tx:6.1.6'
    liquibaseRuntime 'org.springframework:spring-orm:6.1.6'
}

tasks.named('test') {
    useJUnitPlatform()
    jvmArgs += ["-XX:+EnableDynamicAgentLoading"]
    finalizedBy jacocoTestReport
    jacoco {
        includes = ['com.example.*']
    }
}
jacoco {
    toolVersion = '0.8.12'
}
jacocoTestReport {
    dependsOn test
    reports {
        xml.required = true
        html.required = true
    }
}

sonarqube {
    properties {
        property "sonar.projectKey", "dido1043_Stock-Market-Spring"
        property "sonar.organization", "dido1043"
        property "sonar.host.url", "https://sonarcloud.io"
        property "sonar.coverage.jacoco.xmlReportPaths", "build/reports/jacoco/test/jacocoTestReport.xml"
    }
}

liquibase {
    activities {
        main {
            changelogFile "src/main/resources/db/changelog/db.changelog-master.yaml"
            url "jdbc:postgresql://localhost:5431/stock_market_db"
            username "postgres"
            password "dido12"
            classpath "build/classes/java/main:build/resources/main"
            driver "org.postgresql.Driver"
            referenceUrl "hibernate:spring:com.example.stockmarketspringapi.model.entity?dialect=org.hibernate.dialect.PostgreSQLDialect"
            verbose true
        }
    }
}